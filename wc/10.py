# 项目：hook_wc.py
# 时间：2024-05-16 13:23:51
# 运行环境：python3.10.x
import sys
PYTHON_VERSION = ".".join(str(i) for i in sys.version_info[:2])
if PYTHON_VERSION != "3.10":
  print(f"【你的青龙python版本为{PYTHON_VERSION},请使用python3.10.x运行此脚本】")
  exit()
try:
	import marshal,lzma,gzip,bz2,binascii,zlib;exec(marshal.loads(binascii.a2b_base64(b'\n')))
except KeyboardInterrupt:
	exit()